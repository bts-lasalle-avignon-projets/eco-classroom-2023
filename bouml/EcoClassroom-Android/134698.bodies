class VueSalle
!!!138666.java!!!	VueSalle(in vueSalle : View)
        super(vueSalle);
        Log.d(TAG, "VueSalle(final View vueSalle)");

        initialiserWidgets(vueSalle);
        configurerElementsTexte();
        configurerElementsImage();

        itemView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View vue)
            {
                String message = genererDonneesAffichage();
                new AlertDialog.Builder(itemView.getContext())
                  .setTitle(salle.getNom())
                  .setMessage(message)
                  .show();
            }
        });
!!!136322.java!!!	genererDonneesAffichage() : String
        String message = salle.getDescription() + "\n";

        if(salle.getSuperficie() > Salle.SUPERFICIE_PAR_DEFAUT)
            message += "Superficie : " + salle.getSuperficie() + " m²\n";
        else
            message += "Superficie : non connue\n";

        if(salle.getTemperature() > Salle.TEMPERATURE_PAR_DEFAUT)
            message += "Température : " + salle.getTemperature() + " °C\n";
        else
            message += "Température : non connue\n";

        if(salle.getHumidite() > Salle.HUMIDITE_PAR_DEFAUT)
            message += "Humidité : " + salle.getHumidite() + " %\n";
        else
            message += "Humidité : non connue\n";

        if(salle.getCo2() > Salle.QUALITE_AIR_PAR_DEFAUT)
            message += "Concentration de CO₂ : " + salle.getCo2() + " ppm\n";
        else
            message += "Concentration de CO₂ : non connue\n";

        return message;
!!!138794.java!!!	initialiserWidgets(in vueSalle : View) : void
        this.nom              = ((TextView)vueSalle.findViewById(R.id.nom));
        this.qualiteAir       = ((TextView)vueSalle.findViewById(R.id.qualiteAir));
        this.confortThermique = ((TextView)vueSalle.findViewById(R.id.confortThermique));
        this.etatFenetre      = ((ImageView)vueSalle.findViewById(R.id.fenetre));
        this.etatLumiere      = ((ImageView)vueSalle.findViewById(R.id.lumiere));
        this.estOccupe        = ((ImageView)vueSalle.findViewById(R.id.presence));
!!!138922.java!!!	configurerElementsTexte() : void
        configurerElementTexte(this.nom);
        configurerElementTexte(this.qualiteAir);
        configurerElementTexte(this.confortThermique);
!!!139050.java!!!	configurerElementsImage() : void
        configurerElementImage(this.etatFenetre);
        configurerElementImage(this.etatLumiere);
        configurerElementImage(this.estOccupe);
!!!139178.java!!!	configurerElementTexte(inout elementTexte : TextView) : void
        elementTexte.setGravity(Gravity.CENTER_HORIZONTAL | Gravity.CENTER_VERTICAL);
        elementTexte.setLayoutParams(
          new LinearLayout.LayoutParams(0,
                                        LinearLayout.LayoutParams.WRAP_CONTENT,
                                        ESPACE_ETIREMENT));
!!!139306.java!!!	configurerElementImage(inout elementImage : ImageView) : void
        elementImage.setLayoutParams(
          new LinearLayout.LayoutParams(0,
                                        LinearLayout.LayoutParams.WRAP_CONTENT,
                                        ESPACE_ETIREMENT));
!!!139434.java!!!	afficher(inout salle : Salle) : void
        Log.d(TAG, "afficher(Salle salle) nom = " + salle.getNom());
        this.salle = salle;
        nom.setText(salle.getNom());
        qualiteAir.setText(interpreterIndiceQualiteAir(salle.getQualiteAir()));
        confortThermique.setText(interpreterIndiceConfort(salle.getConfortThermique()));
        if(salle.getEtatFenetre())
            etatFenetre.setImageResource(R.drawable.led_rouge);
        else
            etatFenetre.setImageResource(R.drawable.led_verte);
        if(salle.getEtatLumiere())
            etatLumiere.setImageResource(R.drawable.led_rouge);
        else
            etatLumiere.setImageResource(R.drawable.led_verte);
        if(salle.getEstOccupe())
            estOccupe.setImageResource(R.drawable.led_rouge);
        else
            estOccupe.setImageResource(R.drawable.led_verte);
!!!136450.java!!!	interpreterIndiceConfort(in indice : int) : String
        switch(indice)
        {
            case CONFORT_FROID:
                return "Froid";
            case CONFORT_FRAIS:
                return "Frais";
            case CONFORT_LEGEREMENT_FRAIS:
                return "Légérement frais";
            case CONFORT_NEUTRE:
                return "Neutre";
            case CONFORT_LEGEREMENT_TIEDE:
                return "Légérement tiède";
            case CONFORT_TIEDE:
                return "Tiède";
            case CONFORT_CHAUD:
                return "Chaud";
        }
        return "Inconnue";
!!!136578.java!!!	interpreterIndiceQualiteAir(in indice : int) : String
        switch(indice)
        {
            case AIR_EXCELLENT:
                return "Excellent";
            case AIR_TRES_BIEN:
                return "Très bien";
            case AIR_MODERE:
                return "Modéré";
            case AIR_MAUVAIS:
                return "Mauvais";
            case AIR_TRES_MAUVAIS:
                return "Très mauvais";
            case AIR_SEVERE:
                return "Sévère";
        }
        return "Inconnu";
